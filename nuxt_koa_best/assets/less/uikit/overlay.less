// Name:            Overlay
// Description:     Component to create content areas overlaying an image
//
// Component:       `overlay`
//
// Adopted:         `overlay-icon`
//
// Modifier:        `overlay-default`
//                  `overlay-primary`
//
// ========================================================================


// Variables
// ========================================================================

@overlay-padding-horizontal:                    @global-gutter;
@overlay-padding-vertical:                      @global-gutter;

@overlay-default-background:                    fade(@global-color-white, 80%);

@overlay-primary-background:                    fade(@global-color-black, 80%);
@overlay-primary-color-mode:                    light;


/* ========================================================================
   Component: Overlay
 ========================================================================== */

.overlay {
    padding: @overlay-padding-vertical @overlay-padding-horizontal;
    .hook-overlay;
}

/*
 * Remove margin from the last-child
 */

.overlay > :last-child { margin-bottom: 0; }


/* Icon
 ========================================================================== */

.overlay-icon {
    .hook-overlay-icon;
}


/* Style modifiers
 ========================================================================== */

/*
 * Default
 */

.overlay-default {
    background: @overlay-default-background;
    .hook-overlay-default;
}

/*
 * Primary
 */

.overlay-primary {
    background: @overlay-primary-background;
    .hook-overlay-primary;
}

// Color Mode
.overlay-primary:extend(.light all) when (@overlay-primary-color-mode = light) {}
.overlay-primary:extend(.dark all) when (@overlay-primary-color-mode = dark) {}


// Hooks
// ========================================================================

.hook-overlay-misc;

.hook-overlay() {}
.hook-overlay-icon() {}
.hook-overlay-default() {}
.hook-overlay-primary() {}
.hook-overlay-misc() {}
